skip_commits:
  files:
    - "**/*.md"
    - "**/*.png"
    - "**/*LICENCE"

install:
- ps: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Install-Module Pester -Force
- pwsh: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Install-Module Pester -Force

build: off

test_script:
- ps: |
      Import-Module Pester -Force
      Import-Module -Name C:\projects\windowsosbuild
      $testResultsFile = ".\TestsResults_PS.xml"
      $ResultsPS = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -Show All -PassThru
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
      If ($ResultsPS.FailedCount -gt 0) { 
          throw "$($res.FailedCount) tests failed."
      }
- pwsh: |
      Import-Module Pester -Force
      Import-Module -Name C:\projects\windowsosbuild
      $testResultsFile = ".\TestsResults_PWSH.xml"
      $ResultsPWSH = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -Show All -PassThru
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
      If ($ResultsPWSH.FailedCount -gt 0) { 
          throw "$($res.FailedCount) tests failed."
      }
